# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support

name: Java CI with Maven
on:
  pull_request:
    branches:
      - develop
jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin

      - name: Create .env file
        run: |
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build application
        run: mvn clean install -DskipTests

      - name: Run tests and generate JaCoCo report
        run: mvn clean verify

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=TAndrian_we-go-jim

      - name: Check Quality Gate status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
        run: |
          STATUS=$(curl -s "https://sonarcloud.io/api/qualitygates/project_status?projectKey=TAndrian_we-go-jim" -u $SONAR_TOKEN:)
          echo "Quality Gate status: $STATUS"
          if [[ "$STATUS" != *"\"status\":\"OK\""* ]]; then
            echo "Quality Gate failed"
            exit 1
          else
            echo "Quality Gate passed"
          fi