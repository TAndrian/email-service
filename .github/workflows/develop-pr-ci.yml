# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support

name: Java CI with Maven
on:
  pull_request:
    branches:
      - develop
jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
      - name: Setup environment variables
        run: >
          echo "SONAR_CLOUD_TOKEN=${{ secrets.SONAR_CLOUD_TOKEN }}" >> $GITHUB_ENV

          echo "MY_VARIABLE_2=${{ secrets.MY_VARIABLE_2 }}" >> $GITHUB_ENV

          echo "MY_VARIABLE_3=${{ secrets.MY_VARIABLE_3 }}" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Build application
        run: mvn clean install -DskipTests
      - name: Run tests and generate JaCoCo report
        run: mvn clean verify
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository_variables.SONAR_PROJECT_KEY }}"
            -Dsonar.organization=your-${{github.repository_variables.SONAR_ORGANIZATION }}"
            -Dsonar.host.url=${{ github.repository_variables.SONAR_HOST }}"
            -Dsonar.qualitygate.wait=true